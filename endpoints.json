{
  "GET /api": {
    "description": "Serves up a json representation of all available endpoints of the api and further information on forming correct responses to the available endpoints.",
    "further_information": "Endpoints are listed alpabetically and in CRUD order. For each of the available endpoints: All queries are optional, case-sensitive and must be of the correct type or belong to a valid category e.g. '?limit=1' & '?sort_by=votes&order=asc'. When using POST or PATCH the request body must always be well-formed (i.e. contains all necessary information and values of the correct type)."
  },
  "POST /api/articles": {
    "description": "Serves an object with key of 'postedArticle' and value of an array with the posted article object. Requires a well-formed request body with an article object then adds an article to the database.",
    "examplePath": "/api/articles",
    "exampleRequestBody": { 
      "author": "weegembump", 
      "title": "Steam your buns!",
      "body": "The benefits of steaming your buns are innumerable!",
      "topic": "cooking"
    },
    "exampleResponse" : {
      "postedArticle" : [
        {
          "title": "Steam your buns!",
          "topic": "cooking",
          "author": "weegembump",
          "body": "The benefits of steaming your buns are innumerable!",
          "created_at": 1527695953341,
          "comment_count" : "0",
          "article_id": 11,
          "votes": 0
        }
      ]
    }
  },
  "GET /api/articles": {
    "description": "Serves an object with key of 'articles' and value of an array with article objects, and also key of 'total_count' and value of number of articles retreived. Contains all the articles stored on the database, with the title, topic, author, body, created_at, comment_count, article_id, votes for each article.",
    "queries": {
      "topic": ["cooking", "mitch", "cats", "..."], 
      "sort_by": ["title", "topic", "author", "body", "created_at", "votes"], 
      "order": ["asc", "desc"], 
      "limit": "Any Integer starting from 1", 
      "p": "Any Integer starting from 1"
    },
    "examplePath": "/api/articles?topic=football&sort_by=votes&order=desc&limit=2&p=3",
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": 1527695953341,
          "comment_count" : "1",
          "article_id": 5,
          "votes": 0
        },
        {
          "title": "Bread is creasing",
          "topic": "cooking",
          "author": "webump",
          "body": "Text from the article..",
          "created_at": 1527977953371,
          "comment_count" : "2",
          "article_id": 6,
          "votes": 6
        }
      ],
      "total_count": 2
    }
  },
  "GET /api/articles/:article_id": {
    "description": "Serves an object with key of 'article' and value of an array with the specified article object. Requires an article_id with the correct type and which also exists within the database",
    "examplePath" : "/api/articles/1",
    "exampleResponse": {
      "article": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": 1527695953341,
          "comment_count" : "1",
          "article_id": 1,
          "votes": 0
        }
      ]
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "Serves an object with key of 'updatedArticle' and value of an array with the specified article object. Requires an article_id with the correct type and which also exists within the database, also requires a well-formed request body. Updates the specified article votes property, can be used to decrement or increment the article votes.",
    "examplePath" : "/api/articles/1",
    "exampleRequestBody": { "inc_votes": 216 },
    "exampleResponse": {
      "updatedArticle": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": 1527695953341,
          "comment_count" : "1",
          "article_id": 1,
          "votes": 216
        }
      ]
    }
  },
  "DELETE /api/articles/:article_id": {
    "description": "Serves no content when successful, deletes the specified article. Requires an article_id with the correct type and which also exists within the database.",
    "examplePath": "/api/articles/3",
    "exampleResponse": "status: 204, no content"
  },
  "POST /api/articles/:article_id/comments": {
    "description": "Serves an object with key of 'postedComment' and value of an array with the posted comment object. Requires an article_id, username with the correct type and which also exists within the database, also requires a well-formed request body.",
    "examplePath" : "/api/articles/1/comments",
    "exampleRequestBody": { "username": "weegembump", "body": "/nchelp"},
    "exampleResponse": {
      "postedComment": [
        {
          "comment_id": 100,
          "author": "weegembump",
          "body": "/nchelp",
          "created_at": 1527695953341,
          "votes": 0
        }
      ]
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "Serves an object with key of 'comments' and value of an array with the comment objects of a specified article_id. Requires an article_id with the correct type and which also exists within the database. Ordering defaults to newest comments first.",
    "queries": {
      "limit": "Any Integer starting from 1", 
      "p": "Any Integer starting from 1"
    },
    "examplePath" : "/api/articles/1/comments?limit=2&p=4",
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 8,
          "author": "weegembump",
          "body": "Perfectly normal comment...",
          "created_at": 1527695953341,
          "votes": 0
        },
        {
          "comment_id": 7,
          "author": "weegwp",
          "body": "First!",
          "created_at": 1527695953340,
          "votes": 1000
        }
      ]
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "Serves an object with key of 'updatedComment' and value of an array with the specified comment object. Requires a comment_id with the correct type and which also exists within the database, also requires a well-formed request body. Updates the specified comment votes property, can be used to decrement or increment the comment votes.",
    "examplePath": "/api/comments/3",
    "exampleRequestBody": { "inc_votes": 21 },
    "exampleResponse" : {
      "updatedComment" : [
        {
          "comment_id": 1,
          "author": "weegembump",
          "body": "Perfectly normal comment...",
          "created_at": 1527695953341,
          "votes": 21
        }
      ]
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "Serves no content when successful, deletes the specified comment. Requires a comment_id with the correct type and which also exists within the database.",
    "examplePath": "/api/comments/3",
    "exampleResponse": "status: 204, no content"
  },
  "POST /api/topics": {
    "description": "Serves an object with key of 'postedTopic' and value of an array with the posted topic object. Requires a well-formed request body with a topic object then adds a topic to the database",
    "examplePath": "/api/topics",
    "exampleRequestBody": { 
      "slug": "Travelling",
      "description": "Discussing your favourite holiday destinations."
    },
    "exampleResponse" : {
      "postedTopic" : [
        {
          "slug": "Travelling",
          "description": "Discussing your favourite holiday destinations."
        }
      ]
    }
  },
  "GET /api/topics": {
    "description": "Serves an object with key of 'topics' and value of an array with topic objects. Contains all the topics stored on the database, with the slug and description for each topic.",
    "examplePath": "/api/topics",
    "exampleResponse": {
      "topics": [
        { "slug": "football", "description": "Footie!" },
        { "slug": "handball", "description": "Handie!" }
      ]
    }
  },
  "GET /api/users": {
    "description": "Serves an object with key of 'users' and value of an array with user objects.",
    "examplePath" : "/api/users",
    "exampleResponse": {
      "users": [
        {
          "username":"weegembump",
          "name": "pmubmegeew",
          "avatar_url": "https://www.healthytherapies.com/wp-content/uploads/2016/06/Lime3.jpg"
        },
        {
          "username":"pmubmegeew",
          "name": "bob",
          "avatar_url": "https://www.healthytherapies.com/wp-content/uploads/2016/06/Lime3.jpg"
        }
      ]
    }
  },
  "GET /api/user/:username": {
    "description": "Serves an object with key of 'user' and value of an array with the specifiec user object. Requires a username with the correct type and which also exists within the database.",
    "examplePath": "/api/users/icellusedkars",
    "exampleResponse": { 
      "user": [
        {
        "username":"icellusedkars",
        "name": "bob",
        "avatar_url": "https://www.healthytherapies.com/wp-content/uploads/2016/06/Lime3.jpg"
        }
      ]
    }
  }
}
